//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.MMK;

[assembly: RegisterDocumentType(Faq.CLASS_NAME, typeof(Faq))]

namespace CMS.DocumentEngine.Types.MMK
{
	/// <summary>
	/// Represents a content item of type Faq.
	/// </summary>
	public partial class Faq : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "MMK.Faq";


		/// <summary>
		/// The instance of the class that provides extended API for working with Faq fields.
		/// </summary>
		private readonly FaqFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// FaqID.
		/// </summary>
		[DatabaseIDField]
		public int FaqID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("FaqID"), 0);
			}
			set
			{
				SetValue("FaqID", value);
			}
		}


		/// <summary>
		/// Faq Question.
		/// </summary>
		[DatabaseField]
		public string Question
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Question"), @"");
			}
			set
			{
				SetValue("Question", value);
			}
		}


		/// <summary>
		/// Answer.
		/// </summary>
		[DatabaseField]
		public string Answer
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Answer"), @"");
			}
			set
			{
				SetValue("Answer", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with Faq fields.
		/// </summary>
		[RegisterProperty]
		public FaqFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with Faq fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class FaqFields : AbstractHierarchicalObject<FaqFields>
		{
			/// <summary>
			/// The content item of type Faq that is a target of the extended API.
			/// </summary>
			private readonly Faq mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="FaqFields" /> class with the specified content item of type Faq.
			/// </summary>
			/// <param name="instance">The content item of type Faq that is a target of the extended API.</param>
			public FaqFields(Faq instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// FaqID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.FaqID;
				}
				set
				{
					mInstance.FaqID = value;
				}
			}


			/// <summary>
			/// Faq Question.
			/// </summary>
			public string Question
			{
				get
				{
					return mInstance.Question;
				}
				set
				{
					mInstance.Question = value;
				}
			}


			/// <summary>
			/// Answer.
			/// </summary>
			public string Answer
			{
				get
				{
					return mInstance.Answer;
				}
				set
				{
					mInstance.Answer = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="Faq" /> class.
		/// </summary>
		public Faq() : base(CLASS_NAME)
		{
			mFields = new FaqFields(this);
		}

		#endregion
	}
}