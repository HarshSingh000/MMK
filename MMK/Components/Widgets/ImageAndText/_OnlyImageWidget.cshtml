@using MMK.InlineEditors
@using MMK.Widgets
@inject IPageBuilderDataContextRetriever pageBuilderContext
@model OnlyImageWidgetViewModel


@{
    bool editMode = Context.Kentico().PageBuilder().EditMode;
    string ImageClass, DescriptionClass, AllowButton;
    if (@Model.ImageDirection == "LEFT")
    {
        ImageClass = "order-1 order-lg-1";
        DescriptionClass = "order-2 order-lg-2";
    }
    else
    {
        ImageClass = "order-2 order-lg-2";
        DescriptionClass = "order-1 order-lg-1";
    }

    if (@Model.AllowButton)
    {
        AllowButton = "";
    }
    else
    {
        AllowButton = "hidden";
    }
}


@{
    async Task RenderBanner()
    {
        <style>
            .hidden {
                display: none !important;
                visibility: hidden;
            }

        </style>
        <section class="solution section-bg welcome-text">
            <div class="container">

                <div class="section-title">
                    <h2>@Model.Title</h2>
                </div>

                <div class="row">
                    <div class="col-lg-7 d-flex flex-column justify-content-center align-items-stretch  @DescriptionClass">
                        <div class="content">
                            <p>
                                @Html.Kentico().ResolveUrls(Model.Description)
                            </p>
                        </div>
                    </div>
                    @if (editMode)
                    {
                        <vc:image-uploader image-type="@ImageTypeEnum.MediaFile" property-name="@nameof(OnlyImageWidgetProperties.Image)"
                               has-image="@(Model.ImagePath != null)" message-position="@PanelPositionEnum.Top"
                               use-absolute-position="true" />
                    }
                   

                    <div class="col-lg-5 align-items-stretch order-2 order-lg-1 img"
                         style='background-image: url(@Model.ImagePath);' data-aos="zoom-in" data-aos-delay="150">
                        &nbsp;
                    </div>

                    
                </div>
               
                

                <div class="gallery-but @AllowButton">
                    <button type="button" class="gallery-but button">
                        <a href="@Model.ButtonLink" target="_blank">@Model.ButtonText</a>
                    </button>
                </div>
            </div>

        </section>

    }
}

@{
    await RenderBanner();
}

@if (pageBuilderContext.Retrieve().EditMode)
{
    var inlineEditorModel = new OnlyImageWidgetViewModel
                {
                    Title = nameof(OnlyImageWidgetProperties.Title),
                    Description = @Model.Description,
                    ButtonLink = @Model.ButtonLink,
                    ImageDirection = @Model.ImageDirection,
                    ButtonText = @Model.ButtonText,
                    AllowButton = Model.AllowButton
                };
}











